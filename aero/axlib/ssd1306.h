
//-------------------------------------------------<                  axlib v1.1                   >----------------------------------------------------
//-------------------------------------------------< Библиотека для работы с OLED дисплеем SSD1306 >----------------------------------------------------
//-------------------------------------------------<   Кузнецов Алексей 2015 http://www.avrki.ru   >----------------------------------------------------

#ifndef SSD1306_H_
#define SSD1306_H_

#if !defined(MAIN_INIT_H_)
#error "You must included (#include \"main_init.h\") befor use (#include <axlib/ssd1306.h>)."
#endif

//-------------------------------------------------------------------------
//						Объявление служебных псевдонимов
//-------------------------------------------------------------------------

#define SSD1306_OK			0
#define SSD1306_FAIL		1

#define SSD1306_DELAY()
#define SSD1306_SET			1
#define SSD1306_RESET		0

//-------------------------------------------------------------------------
//							Подключаемые библиотеки
//-------------------------------------------------------------------------

#include <axlib/type_var.h>
#include <axlib/i2c.h>
#include <axlib/font5x7.h>

//-------------------------------------------------------------------------
//							Объявление функций
//-------------------------------------------------------------------------

// Функция передачи команды
BYTE ssd1306_send_com(BYTE com);
// Функция передачи команды
BYTE ssd1306_send_data(BYTE data);
// Функция инициализации дисплея.
BYTE ssd1306_init(void);
// Функция установки позиции
void ssd1306_position(BYTE x, BYTE y);
// Функция очистки дисплея
void ssd1306_clear(void);
// Функция установки курсора
void ssd1306_goto_xy(BYTE x, BYTE y);
// Функция вывода символа
void ssd1306_putchar(BYTE chr);
//Функция вывода строки
void ssd1306_putstr(BYTE *str);
// Функция вывода своего символа
void ssd136_symbol(BYTE *arr, BYTE light);

//-------------------------------------------------------------------------
//	Функция передачи команды дисплею
//
//-------------------------------------------------------------------------

BYTE ssd1306_send_com(BYTE com)
{
	BYTE ask = ACK;
	
	i2c_start();
	ask = i2c_send_byte(SSD1306_ADD);
	ask = i2c_send_byte(0x00);
	ask = i2c_send_byte(com);
	ask = i2c_stop();
	
	return ask;
}

//-------------------------------------------------------------------------
//	Функция передачи данных дисплею
//
//-------------------------------------------------------------------------

BYTE ssd1306_send_data(BYTE data)
{
	BYTE ask = ACK;
	
	i2c_start();
	ask = i2c_send_byte(SSD1306_ADD);
	ask = i2c_send_byte(0x40);
	ask = i2c_send_byte(data);
	ask = i2c_stop();
	
	return ask;
}

//-------------------------------------------------------------------------
//	Функция иницциализирует дисплей. Возвращаемое значение указывает
//	на качество выпонения инициализации. При удаче вернет SSD1306_OK, при неудаче
//	вурнет ошибку SSD1306_FAIL.
//-------------------------------------------------------------------------

BYTE ssd1306_init(void)
{
	BYTE ask = ACK;
	i2c_init();
	
	_delay_ms(100);
	
	ask = ssd1306_send_com(0xAF);
	ask = ssd1306_send_com(0xD5);
	ask = ssd1306_send_com(0x80);
	ask = ssd1306_send_com(0xA8);
	ask = ssd1306_send_com(0x3F);
	ask = ssd1306_send_com(0xD3);
	ask = ssd1306_send_com(0xD0);
	ask = ssd1306_send_com(0x40);
	ask = ssd1306_send_com(0x8D);
	ask = ssd1306_send_com(0x14);
	ask = ssd1306_send_com(0xA1);
	ask = ssd1306_send_com(0xC0);
	ask = ssd1306_send_com(0xDA);
	ask = ssd1306_send_com(0x12);
	ask = ssd1306_send_com(0x81);
	ask = ssd1306_send_com(0xB4); // Контрастность
	ask = ssd1306_send_com(0xD9);
	ask = ssd1306_send_com(0xF1);
	ask = ssd1306_send_com(0xDB);
	ask = ssd1306_send_com(0x40);
	ask = ssd1306_send_com(0xA4);
	ask = ssd1306_send_com(0xA6);
	ask = ssd1306_send_com(0x20);
	ask = ssd1306_send_com(0x00);
	ask = ssd1306_send_com(0xAF);
	
	ssd1306_clear();
	
	return ask;
}

//-------------------------------------------------------------------------
//	Функция установки позиции
//
//-------------------------------------------------------------------------

void ssd1306_position(BYTE x, BYTE y)
{
	if(y == 0) ssd1306_send_com(0xB1);
	if(y == 1) ssd1306_send_com(0xB0);
	if((y > 1) & (y <= 7))
	{
		ssd1306_send_com(0xB9 - y);
	}
	
	ssd1306_send_com(((x & 0xF0) >> 4) | 0x10);
	ssd1306_send_com((x & 0x0F) | 0x01); 
}

//-------------------------------------------------------------------------
// Функция очистки дисплея
//
//-------------------------------------------------------------------------

void ssd1306_clear(void)
{
	BYTE m,n;
	for(m=0;m<8;m++)
	{
		ssd1306_send_com(0xb0+m);
		ssd1306_send_com(0x00);		
		ssd1306_send_com(0x10);		
		for(n=0;n<128;n++)
		{
			ssd1306_send_data(0x00);
		}
	}
}

//-------------------------------------------------------------------------
//	Функция установки курсора
//
//-------------------------------------------------------------------------

void ssd1306_goto_xy(BYTE x, BYTE y)
{
	if(x > 15) x = 21;
	if(y > 7) y = 7;
	
	ssd1306_position((x*6), y);
}

//-------------------------------------------------------------------------
//	Функция вывода символа
//
//-------------------------------------------------------------------------

void ssd1306_putchar(BYTE chr)
{
	BYTE i;
	
	if(chr < 0x20) 
		{
			chr = 0x00;
		}
	else
		{
			chr -= 0x20;
		}
	
	for(i=0; i<5; i++)
		{
			ssd1306_send_data(pgm_read_byte(&(font6x8[(chr*5)+i])));
		}
		
	ssd1306_send_data(0x00);
}

//-------------------------------------------------------------------------
//	Функция вывода строки
//
//-------------------------------------------------------------------------

void ssd1306_putstr(BYTE *str)
{
	while(*str)
		{
			ssd1306_putchar(*str);
			str++;
		}
}

//-------------------------------------------------------------------------
//	Функция вывода своего символа
//
//-------------------------------------------------------------------------

void ssd136_symbol(BYTE *arr, BYTE light)
{
	BYTE i = 0;
	
	for(i=0; i<light; i++)
		{
			ssd1306_send_data(*arr);
			arr++;
		}
}

//-------------------------------------------------------------------------

//void ssd1306_pix_xy(BYTE x, BYTE y, BYTE mode)
//{
	//BYTE data_page = y/8;
	//BYTE data_pix = 0;
	//
	//if(mode == SSD1306_SET) 
		//{
			//data_pix |= (1 << (y%8));
		//}
	//
	//ssd1306_position(x, data_page);
	//ssd1306_send_data(data_pix);
//}


#endif /* SSD1306_H_ */